const n=JSON.parse('{"key":"v-8192948e","path":"/latestarticle/","title":"JavaScript 基础","lang":"zh-CN","frontmatter":{"date":"2020-01-09T00:00:00.000Z","category":["前端"],"tag":["JavaScript"],"sticky":true,"star":100,"description":"JavaScript 基础 1.引用类型 值类型 引用类型 强制类型转换和隐式类型转换 强制：parseInt parseFloat toString 隐式：if、逻辑运算、==、+字符串拼接 2.深拷贝 /** * 深拷贝 * @param {object} obj 要拷贝的对象 */ function deepClone(obj) { // 判断类型 输入的是否为 对象或者数组 if (typeof obj !== \\"object\\" || obj == null) { return obj } // 初始化返回结果 let result if (obj instanceof Array) { result = [] } else { result = {} } for (let key in obj) { // 保证key不是原型的属性 if (obj.hasOwnProperty(key)) { // 递归调用 ！！！ 遍历复杂的结构 result[key] = deepClone(obj[key]) } } // 返回结果 return result }","head":[["meta",{"property":"og:url","content":"https://treewish.github.io/latestarticle/"}],["meta",{"property":"og:site_name","content":"TreeWish"}],["meta",{"property":"og:title","content":"JavaScript 基础"}],["meta",{"property":"og:description","content":"JavaScript 基础 1.引用类型 值类型 引用类型 强制类型转换和隐式类型转换 强制：parseInt parseFloat toString 隐式：if、逻辑运算、==、+字符串拼接 2.深拷贝 /** * 深拷贝 * @param {object} obj 要拷贝的对象 */ function deepClone(obj) { // 判断类型 输入的是否为 对象或者数组 if (typeof obj !== \\"object\\" || obj == null) { return obj } // 初始化返回结果 let result if (obj instanceof Array) { result = [] } else { result = {} } for (let key in obj) { // 保证key不是原型的属性 if (obj.hasOwnProperty(key)) { // 递归调用 ！！！ 遍历复杂的结构 result[key] = deepClone(obj[key]) } } // 返回结果 return result }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T10:20:21.000Z"}],["meta",{"property":"article:author","content":"TreeWish"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2020-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-16T10:20:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript 基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-16T10:20:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TreeWish\\",\\"url\\":\\"https://github.com/treewish\\"}]}"]]},"headers":[{"level":2,"title":"1.引用类型","slug":"_1-引用类型","link":"#_1-引用类型","children":[]},{"level":2,"title":"2.深拷贝","slug":"_2-深拷贝","link":"#_2-深拷贝","children":[]},{"level":2,"title":"3.if-else 判断条件（true 类 和 false 类）","slug":"_3-if-else-判断条件-true-类-和-false-类","link":"#_3-if-else-判断条件-true-类-和-false-类","children":[]},{"level":2,"title":"4.什么时候用 == 什么时候用===","slug":"_4-什么时候用-什么时候用","link":"#_4-什么时候用-什么时候用","children":[]},{"level":2,"title":"5.事件循环和任务队列","slug":"_5-事件循环和任务队列","link":"#_5-事件循环和任务队列","children":[]},{"level":2,"title":"6.闭包","slug":"_6-闭包","link":"#_6-闭包","children":[]},{"level":2,"title":"7.this","slug":"_7-this","link":"#_7-this","children":[]},{"level":2,"title":"8.手写 bind 函数","slug":"_8-手写-bind-函数","link":"#_8-手写-bind-函数","children":[]},{"level":2,"title":"9.手写 instanceof 函数","slug":"_9-手写-instanceof-函数","link":"#_9-手写-instanceof-函数","children":[]},{"level":2,"title":"10.同步和异步的区别是什么?","slug":"_10-同步和异步的区别是什么","link":"#_10-同步和异步的区别是什么","children":[]},{"level":2,"title":"11.手写用 Promise 加载一张图片","slug":"_11-手写用-promise-加载一张图片","link":"#_11-手写用-promise-加载一张图片","children":[]},{"level":2,"title":"12.前端使用异步的场景有哪些?","slug":"_12-前端使用异步的场景有哪些","link":"#_12-前端使用异步的场景有哪些","children":[]},{"level":2,"title":"13.DOM","slug":"_13-dom","link":"#_13-dom","children":[]},{"level":2,"title":"14.事件绑定函数","slug":"_14-事件绑定函数","link":"#_14-事件绑定函数","children":[]},{"level":2,"title":"15.XMLHttpRequset","slug":"_15-xmlhttprequset","link":"#_15-xmlhttprequset","children":[]},{"level":2,"title":"16.同源策略和跨域","slug":"_16-同源策略和跨域","link":"#_16-同源策略和跨域","children":[{"level":3,"title":"同源策略","slug":"同源策略","link":"#同源策略","children":[]},{"level":3,"title":"跨域","slug":"跨域","link":"#跨域","children":[]}]},{"level":2,"title":"17.存储","slug":"_17-存储","link":"#_17-存储","children":[{"level":3,"title":"cookie","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]}]},{"level":2,"title":"18.从输入 URL 到页面加载找个过程发生了什么？","slug":"_18-从输入-url-到页面加载找个过程发生了什么","link":"#_18-从输入-url-到页面加载找个过程发生了什么","children":[{"level":3,"title":"下载资源","slug":"下载资源","link":"#下载资源","children":[]},{"level":3,"title":"页面渲染","slug":"页面渲染","link":"#页面渲染","children":[]}]},{"level":2,"title":"19.window.onload 和 DOMContentLoaded","slug":"_19-window-onload-和-domcontentloaded","link":"#_19-window-onload-和-domcontentloaded","children":[]},{"level":2,"title":"20.性能优化","slug":"_20-性能优化","link":"#_20-性能优化","children":[{"level":3,"title":"加载","slug":"加载","link":"#加载","children":[]},{"level":3,"title":"渲染","slug":"渲染","link":"#渲染","children":[]}]},{"level":2,"title":"21.常见的 Web 安全及防护","slug":"_21-常见的-web-安全及防护","link":"#_21-常见的-web-安全及防护","children":[]},{"level":2,"title":"22.数组常用 API","slug":"_22-数组常用-api","link":"#_22-数组常用-api","children":[{"level":3,"title":"纯函数","slug":"纯函数","link":"#纯函数","children":[]},{"level":3,"title":"非纯函数","slug":"非纯函数","link":"#非纯函数","children":[]},{"level":3,"title":"split 和 join","slug":"split-和-join","link":"#split-和-join","children":[]},{"level":3,"title":"slice 和 splice","slug":"slice-和-splice","link":"#slice-和-splice","children":[]}]},{"level":2,"title":"23.手写 isEqual","slug":"_23-手写-isequal","link":"#_23-手写-isequal","children":[]}],"git":{"createdTime":1692112452000,"updatedTime":1692181221000,"contributors":[{"name":"TreeWish","email":"1131093754@qq.com","commits":1},{"name":"treewish","email":"1131093754@qq.com","commits":1}]},"readingTime":{"minutes":14.34,"words":4302},"filePathRelative":"latestarticle/README.md","localizedDate":"2020年1月9日","excerpt":"<h1> JavaScript 基础</h1>\\n<h2> 1.引用类型</h2>\\n<ul>\\n<li>\\n<p>值类型</p>\\n</li>\\n<li>\\n<p>引用类型</p>\\n<blockquote>\\n<p>强制类型转换和隐式类型转换</p>\\n<p>强制：parseInt parseFloat toString</p>\\n<p>隐式：if、逻辑运算、==、+字符串拼接</p>\\n</blockquote>\\n</li>\\n</ul>\\n<h2> 2.深拷贝</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token doc-comment comment\\">/**\\n * 深拷贝\\n * <span class=\\"token keyword\\">@param</span> <span class=\\"token class-name\\"><span class=\\"token punctuation\\">{</span>object<span class=\\"token punctuation\\">}</span></span> <span class=\\"token parameter\\">obj</span> 要拷贝的对象\\n */</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">deepClone</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 判断类型 输入的是否为 对象或者数组</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> obj <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">\\"object\\"</span> <span class=\\"token operator\\">||</span> obj <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> obj\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 初始化返回结果</span>\\n  <span class=\\"token keyword\\">let</span> result\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>obj <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    result <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    result <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> key <span class=\\"token keyword\\">in</span> obj<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 保证key不是原型的属性</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hasOwnProperty</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 递归调用 ！！！ 遍历复杂的结构</span>\\n      result<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">deepClone</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 返回结果</span>\\n  <span class=\\"token keyword\\">return</span> result\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"TreeWish"},"autoDesc":true}');export{n as data};
